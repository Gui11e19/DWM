<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOperaciones.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>